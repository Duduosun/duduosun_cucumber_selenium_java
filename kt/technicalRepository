Feature Template
@TestSuite
Feature: USER STORY IN CAPS - As a User, I want to ....
Given <Provision in Sentence>
When <Action in Sentence>
And <If Additional Action applies in Sentence>
Then <Expected Result in Sentence>
And <If Additional Expected Result applies in Sentence>

Building Page Object Repository
- Extend PageObject from framework package
- Capture page objects and assign to Web Driver variables/fields
- Create methods specific to objects on page
-- Mandatory - Page Title String and Body - Nomenclature is smallcapsPageTitle e.g. homePageTitle

Building Step Definitions
- Import Page Objects to be used
- Initiate Private OUR variable from imported Page Object
- Create Constructor for INCOMING variable from imported Page Object
- Include this command to distinguish between OUR and INCOMING variables
--- if this command is omitted - the compiler will return java.lang.NullPointerException

-- Object Capture
document.getElementsByClassName('productContainer')[0]

driver.findElement(By.xpath("//input[2]"));

//img[@title='Modify'][i]
//img[@title='Modify'][0]
(//img[@title='Modify'])[0]


Overlay
- .//*[@id='screenR']
- id="screenR" class="screenRForMegaMenu"
- //body

Refresh
- driver.findElement(By.xpath("//body")).sendKeys(Keys.F5);
WebDriverHelper.getWebDriver().navigate().refresh();

Object Identification Tips
- An image link - .imageTextWidget>img with more than one matching node
<img class="" title="" alt="" src="/content/dam/audi/production/Home/Homepage_Heroes_July_2015/icon_BookService.png"/>
- Use name of image to uniquely identify -- a.imageTextWidget>img[src*=BookService]
- Capture a link -- .audi_icon_price>a
- Use attribute value to uniquely identify an object -- .grid.fixed[style*=owners-area]
- Use index to uniquely identify an object -- .grid-container.section:nth-of-type(2)
.parsys.grid-container:nth-of-type(2) - not working
- Use attribute value --- div.col-xs-12>div[id*=get-a-quote]
- Use parent tag/class to uniquely identify an object -- [class='row grey ng-scope'] .container


-- Sample Codes --

    -- Group capture for similar elemenets and individual CTA - e.g. PLP
    public void clickOneOfMany(int position){
        List<WebElement> plpProducts = WebDriverHelper.getWebDriver().findElements(By.cssSelector(""));
        for(WebElement element: plpProducts){
            element.click();
        }
        plpProducts.get(position).click();
    }

        public void fillEmailAddress(int oIndex){
            List<WebElement> emailInputBox = getWebDriver().findElements(emailAddress);
                for (WebElement element: emailInputBox) {
                emailInputBox.get(oIndex);
                }
        }

    -- Group capture of different elements and individual CTA for button n labels - e.g. PDP Block
    public WebElement findSelectedProductBlock(ProductListDetail description) {

        List<WebElement> listOfProducts = visibilityOfAllElementsLocatedBy(productTitles);
        for (WebElement product : listOfProducts) {
            if (product.getText().equalsIgnoreCase(description.getProductTitle())) {
                // LOG.info("Product found : " + product.getText());
                return product;
            }
        }
        return null;
    }

        -- Group capture of similar elements and individual CTA for links e.g. Top Level CAT click
           waitForExpectedElement(bagsAndLeather);
            visibilityOfAllElementsLocatedBy(allSubcategoryAccessoryLinks).stream()
                    .filter(categoryElement -> categoryElement.getText()
                            .equals(subCategoryHeader))
                    .findFirst().get().click();


//mouseover
    public void scrollAndClick(WebElement webElement) {
        Point hoverItem = webElement.getLocation();

        clickWithinElementWithXYCoordinates(webElement, hoverItem.getX(), hoverItem.getY());
        webElement.click();


    }



Debugging
Thread.sleep(1000);
        WebElement e = WebDriverHelper.getWebDriver().findElement(By.cssSelector(".main #email"));
        e.click();
        e.clear();
        e.sendKeys("success");

        customerLoginPage.emailAddress().click();
        customerLoginPage.emailAddress().clear();


-- Reusable Codes
        public String returnRegion(String region){
            String retval = "";

            switch (region){
                case "Region One": {
                    retval = waitForExpectedElement(regionOne).getText();
                    break;
                }
                case "Region Two": {
                    retval = waitForExpectedElement(regionTwo).getText();
                    break;
                }
                case "Region Three": {
                    retval = waitForExpectedElement(regionThree).getText();
                    break;
                }
                case "Region Four": {
                    retval = waitForExpectedElement(regionFour).getText();
                    break;
                }
                case "Region Five": {
                    retval = waitForExpectedElement(regionFive).getText();
                    break;
                }
            }
            return retval;
        }
        public String returnCountry(String country) {

            String retval = "";

            switch (country) {
                case "Region One": {
                    retval = waitForExpectedElement(regions).getText();
                    break;
                }
                case "Region Two": {
                    retval = waitForExpectedElement(regionTwoCountries).getText();
                    break;
                }
                case "Region Three": {
                    retval = waitForExpectedElement(regionThreeCountries).getText();
                    break;
                }
                case "Region Four": {
                    retval = waitForExpectedElement(regionFourCountries).getText();
                    break;
                }
                case "Region Five": {
                    retval = waitForExpectedElement(regionFiveCountries).getText();
                    break;
                }
            }
            return retval;
        }

            public void enterCountry(String country){
                waitForExpectedElement(countrySearch).sendKeys(country);
                waitForExpectedElement(countrySearch).sendKeys(Keys.RETURN);
            } //redundant


            public void clickRegion(String region){

                switch (region){
                    case "Region One": {
                        waitForExpectedElement(regionOne).click();
                        break;
                    }
                    case "Region Two": {
                        waitForExpectedElement(regionTwo).click();
                        break;
                    }
                    case "Region Three": {
                        waitForExpectedElement(regionThree).click();
                        break;
                    }
                    case "Region Four": {
                        waitForExpectedElement(regionFour).click();
                        break;
                    }
                    case "Region Five": {
                        waitForExpectedElement(regionFive).click();
                        break;
                    }
                }
            } //redundant





